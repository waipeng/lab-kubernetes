---

- name: Base
  hosts: all
  become: true
  tasks:
    - name: Ping
      ping:

    - name: Enable Color Prompt
      lineinfile:
        dest: /root/.bashrc
        regexp: "^(#)?force_color_prompt"
        line: "force_color_prompt=yes"
        insertafter: EOF
        state: present

    - name: Install Aptitude Package
      apt:
        pkg: aptitude
        state: latest

    - name: Update and Upgrade Packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install Base Packages
      apt:
        pkg: "{{ item }}"
        state: latest
      with_items:
        - tmux
        - multitail
        - colordiff
        - fping
        - htop
        - ncdu
        - moreutils
        - bmon
        - apt-transport-https
        - curl
        - httpie

- name: Master and Worker Nodes
  hosts: master,worker
  become: true
  tasks:
    - name: Ping
      ping:

    - name: Add Kubernetes APT Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add Kubernetes APT Repository
      apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        filename: "kubernetes"

    - name: Install Packages
      apt:
        pkg: "{{ item }}"
        state: present
      with_items:
        - docker.io=17.03.*
        - kubelet=1.10.*
        - kubeadm=1.10.*
        - kubectl=1.10.*
        - nfs-common

    - name: Add Kubernetes DNS Nameserver to Resolv.conf
      lineinfile:
        dest: /etc/resolv.conf
        line: "nameserver 10.96.0.10"
        insertafter: "#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN"
        state: present

    - name: Add Kubernetes DNS Nameserver to ENI
      replace:
        dest: /etc/network/interfaces
        regexp: "^    dns-nameservers(.*)?$"
        replace: "    dns-nameservers 10.96.0.10 8.8.8.8 8.8.4.4"

- name: Master Node
  hosts: master
  become: true
  tasks:
    - name: Ping
      ping:

    - name: Init Master
      command: "kubeadm init --pod-network-cidr=10.244.0.0/16"
      args:
        creates: "/etc/kubernetes/admin.conf"
      register: kubeadm_init_result

    - name: Create Kubectl Config Directory
      file:
        path: "/root/.kube"
        state: directory

    - name: Symlink Kubectl Config File
      file:
        src: "/etc/kubernetes/admin.conf"
        dest: "/root/.kube/config"
        state: link

    - name: Configure Flannel CNI
      command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml"
      args:
        creates: "/etc/cni/net.d/10-flannel.conf"

    - name: Describe Master Node
      command: "kubectl describe node {{ ansible_hostname }}"
      register: kubectl_describe_node_master_result

    - name: Untaint Master for AIO Scheduling
      command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
      when:
        - "{{ groups['worker'] | length == 0 }}"
        - "{{ 'node-role.kubernetes.io/master:NoSchedule' in kubectl_describe_node_master_result.stdout }}"

- name: Worker Nodes
  hosts: worker
  become: true
  tasks:
    - name: Ping
      ping:

    - name: Join Worker
      command: "{{ hostvars['master'].kubeadm_init_result.stdout_lines | last }} --ignore-preflight-errors=cri"
      args:
        creates: "/etc/kubernetes/bootstrap-kubelet.conf"
